library("data.table")
result.dt <- fread("all_result_use.csv")
result.dt[,`:=`(CARMENEF = result.dt[,Prob]*result.dt[,UnmatchProb]/(result.dt[,Prob]*result.dt[,UnmatchProb]+(1-result.dt[,Prob])*(1-result.dt[,UnmatchProb])))]
result.split.dt <- fread("all_result_use_split_ID.csv",header = FALSE)
setnames(result.split.dt, c("ID","Chr","Pos","Ref","Alt","Version","Gene","RE2Pvalue","Prob","UnmatchProb"))
require('TxDb.Hsapiens.UCSC.hg19.knownGene')
library(VariantAnnotation)
input <- GRanges( seqnames = Rle(paste("chr",result.split.dt$Chr,sep="")),
                  ranges   = IRanges(result.split.dt$Pos, end=result.split.dt$Pos),
                  strand   = Rle(strand("*")) )
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
loc <- locateVariants(input, TxDb.Hsapiens.UCSC.hg19.knownGene, CodingVariants())
result.split.filter.dt <- result.split.dt[is.na(match(paste(paste("chr",as.character(result.split.dt$Chr),sep=""),result.split.dt$Pos),
                   unique(paste(space(as(loc,"RangedData")),start(loc))))),]
result.split.filter.dt[,`:=`(CARMENEF = result.split.filter.dt[,Prob]*result.split.filter.dt[,UnmatchProb]/(result.split.filter.dt[,Prob]*result.split.filter.dt[,UnmatchProb] + (1-result.split.filter.dt[,Prob])*(1-result.split.filter.dt[,UnmatchProb])))]
require('TxDb.Hsapiens.UCSC.hg19.knownGene')
install.packages("VariantAnnotation")
